(declare-sort String 0)

(declare-fun _a_ () Int)
(declare-fun _b_ () Int)
(declare-fun _c_ () Int)
(declare-fun _d_ () Int)
(declare-fun _e_ () Int)
(declare-fun _f_ () Int)
(declare-fun _g_ () Int)
(declare-fun _h_ () Int)
(declare-fun _i_ () Int)
(declare-fun _j_ () Int)
(declare-fun _k_ () Int)
(declare-fun _l_ () Int)
(declare-fun _m_ () Int)
(declare-fun _n_ () Int)
(declare-fun _o_ () Int)
(declare-fun _p_ () Int)
(declare-fun _q_ () Int)
(declare-fun _r_ () Int)
(declare-fun _s_ () Int)
(declare-fun _t_ () Int)
(declare-fun _u_ () Int)
(declare-fun _v_ () Int)
(declare-fun _w_ () Int)
(declare-fun _x_ () Int)
(declare-fun _y_ () Int)
(declare-fun _z_ () Int)
(declare-fun _A_ () Int)
(declare-fun _B_ () Int)
(declare-fun _C_ () Int)
(declare-fun _D_ () Int)
(declare-fun _E_ () Int)
(declare-fun _F_ () Int)
(declare-fun _G_ () Int)
(declare-fun _H_ () Int)
(declare-fun _I_ () Int)
(declare-fun _J_ () Int)
(declare-fun _K_ () Int)
(declare-fun _L_ () Int)
(declare-fun _M_ () Int)
(declare-fun _N_ () Int)
(declare-fun _O_ () Int)
(declare-fun _P_ () Int)
(declare-fun _Q_ () Int)
(declare-fun _R_ () Int)
(declare-fun _S_ () Int)
(declare-fun _T_ () Int)
(declare-fun _U_ () Int)
(declare-fun _V_ () Int)
(declare-fun _W_ () Int)
(declare-fun _X_ () Int)
(declare-fun _Y_ () Int)
(declare-fun _Z_ () Int)
(declare-fun _0_ () Int)
(declare-fun _1_ () Int)
(declare-fun _2_ () Int)
(declare-fun _3_ () Int)
(declare-fun _4_ () Int)
(declare-fun _5_ () Int)
(declare-fun _6_ () Int)
(declare-fun _7_ () Int)
(declare-fun _8_ () Int)
(declare-fun _9_ () Int)

(declare-fun _space_ () Int)
(declare-fun _period_ () Int)
(declare-fun _comma_ () Int)
(declare-fun _colon_ () Int)
(declare-fun _fwdslash_ () Int)
(declare-fun _underscore_ () Int)
(declare-fun _dblquote_ () Int)
(declare-fun _siglequote_ () Int)
(declare-fun _backslash_ () Int)
(declare-fun _dash_ () Int)
(declare-fun _question_ () Int)
(declare-fun _openparen_ () Int)
(declare-fun _closeparen_ () Int)
(declare-fun _semicolon_ () Int)
(declare-fun _lcurly_ () Int)
(declare-fun _rcurly_ () Int)
(declare-fun _equals_ () Int)
(declare-fun _at_ () Int)
(declare-fun _lbracket_ () Int)
(declare-fun _rbracket_ () Int)
(declare-fun _amp_ () Int)
(declare-fun _excl_ () Int)
(declare-fun _pound_ () Int)
(declare-fun _percent_ () Int)
(declare-fun _plus_ () Int)
(declare-fun _star_ () Int)
(declare-fun _carrot_ () Int)
(declare-fun _tilde_ () Int)
(declare-fun _backtick_ () Int)
(declare-fun _langle_ () Int)
(declare-fun _rangle_ () Int)
(declare-fun _mid_ () Int)
(declare-fun _dollar_ () Int)
(declare-fun _newline_ () Int)
(declare-fun _tab_ () Int)
(declare-fun _return_ () Int)
(declare-fun _slashf_ () Int)
(declare-fun _slashb_ () Int)

(assert (= _slashb_ 8))
(assert (= _tab_ 9))
(assert (= _newline_ 10))
(assert (= _slashf_ 12))
(assert (= _return_ 13))
(assert (= _space_ 32))
(assert (= _excl_ 33))
(assert (= _dblquote_ 34))
(assert (= _pound_ 35))
(assert (= _dollar_ 36))
(assert (= _percent_ 37))
(assert (= _amp_ 38))
(assert (= _siglequote_ 39))
(assert (= _openparen_ 40))
(assert (= _closeparen_ 41))
(assert (= _star_ 42))
(assert (= _plus_ 43))
(assert (= _comma_ 44))
(assert (= _dash_ 45))
(assert (= _period_ 46))
(assert (= _fwdslash_ 47))
(assert (= _0_ 48))
(assert (= _1_ 49))
(assert (= _2_ 50))
(assert (= _3_ 51))
(assert (= _4_ 52))
(assert (= _5_ 53))
(assert (= _6_ 54))
(assert (= _7_ 55))
(assert (= _8_ 56))
(assert (= _9_ 57))
(assert (= _colon_ 58))
(assert (= _semicolon_ 59))
(assert (= _langle_ 60))
(assert (= _equals_ 61))
(assert (= _rangle_ 62))
(assert (= _question_ 63))
(assert (= _at_ 64))
(assert (= _A_ 65))
(assert (= _B_ 66))
(assert (= _C_ 67))
(assert (= _D_ 68))
(assert (= _E_ 69))
(assert (= _F_ 70))
(assert (= _G_ 71))
(assert (= _H_ 72))
(assert (= _I_ 73))
(assert (= _J_ 74))
(assert (= _K_ 75))
(assert (= _L_ 76))
(assert (= _M_ 77))
(assert (= _N_ 78))
(assert (= _O_ 79))
(assert (= _P_ 80))
(assert (= _Q_ 81))
(assert (= _R_ 82))
(assert (= _S_ 83))
(assert (= _T_ 84))
(assert (= _U_ 85))
(assert (= _V_ 86))
(assert (= _W_ 87))
(assert (= _X_ 88))
(assert (= _Y_ 89))
(assert (= _Z_ 90))
(assert (= _lbracket_ 91))
(assert (= _backslash_ 92))
(assert (= _rbracket_ 93))
(assert (= _carrot_ 94))
(assert (= _underscore_ 95))
(assert (= _backtick_ 96))
(assert (= _a_ 97))
(assert (= _b_ 98))
(assert (= _c_ 99))
(assert (= _d_ 100))
(assert (= _e_ 101))
(assert (= _f_ 102))
(assert (= _g_ 103))
(assert (= _h_ 104))
(assert (= _i_ 105))
(assert (= _j_ 106))
(assert (= _k_ 107))
(assert (= _l_ 108))
(assert (= _m_ 109))
(assert (= _n_ 110))
(assert (= _o_ 111))
(assert (= _p_ 112))
(assert (= _q_ 113))
(assert (= _r_ 114))
(assert (= _s_ 115))
(assert (= _t_ 116))
(assert (= _u_ 117))
(assert (= _v_ 118))
(assert (= _w_ 119))
(assert (= _x_ 120))
(assert (= _y_ 121))
(assert (= _z_ 122))
(assert (= _lcurly_ 123))
(assert (= _mid_ 124))
(assert (= _rcurly_ 125))
(assert (= _tilde_ 126))

(declare-fun toLower (Int) Int)
(assert (= (toLower _A_) _a_))
(assert (= (toLower _B_) _b_))
(assert (= (toLower _C_) _c_))
(assert (= (toLower _D_) _d_))
(assert (= (toLower _E_) _e_))
(assert (= (toLower _F_) _f_))
(assert (= (toLower _G_) _g_))
(assert (= (toLower _H_) _h_))
(assert (= (toLower _I_) _i_))
(assert (= (toLower _J_) _j_))
(assert (= (toLower _K_) _k_))
(assert (= (toLower _L_) _l_))
(assert (= (toLower _M_) _m_))
(assert (= (toLower _N_) _n_))
(assert (= (toLower _O_) _o_))
(assert (= (toLower _P_) _p_))
(assert (= (toLower _Q_) _q_))
(assert (= (toLower _R_) _r_))
(assert (= (toLower _S_) _s_))
(assert (= (toLower _T_) _t_))
(assert (= (toLower _U_) _u_))
(assert (= (toLower _V_) _v_))
(assert (= (toLower _W_) _w_))
(assert (= (toLower _X_) _x_))
(assert (= (toLower _Y_) _y_))
(assert (= (toLower _Z_) _z_))


(declare-fun toUpper (Int) Int)
(assert (= (toUpper _a_) _A_))
(assert (= (toUpper _b_) _B_))
(assert (= (toUpper _c_) _C_))
(assert (= (toUpper _d_) _D_))
(assert (= (toUpper _e_) _E_))
(assert (= (toUpper _f_) _F_))
(assert (= (toUpper _g_) _G_))
(assert (= (toUpper _h_) _H_))
(assert (= (toUpper _i_) _I_))
(assert (= (toUpper _j_) _J_))
(assert (= (toUpper _k_) _K_))
(assert (= (toUpper _l_) _L_))
(assert (= (toUpper _m_) _M_))
(assert (= (toUpper _n_) _N_))
(assert (= (toUpper _o_) _O_))
(assert (= (toUpper _p_) _P_))
(assert (= (toUpper _q_) _Q_))
(assert (= (toUpper _r_) _R_))
(assert (= (toUpper _s_) _S_))
(assert (= (toUpper _t_) _T_))
(assert (= (toUpper _u_) _U_))
(assert (= (toUpper _v_) _V_))
(assert (= (toUpper _w_) _W_))
(assert (= (toUpper _x_) _X_))
(assert (= (toUpper _y_) _Y_))
(assert (= (toUpper _z_) _Z_))

(declare-fun length ( String ) Int )
(declare-fun charOf (String Int) Int)

;compare certain index of two strings
(define-fun compare ((dom String)(sub String)(index Int)) Int
	(
		ite(> (charOf dom index) (charOf sub index)) 1
			(
				ite (= (charOf dom index) (charOf sub index)) 0
				 -1
			)
	)
)


